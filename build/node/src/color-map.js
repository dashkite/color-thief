"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorMap = void 0;
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var C = _interopRequireWildcard(require("./constants.js"));
var pv = _interopRequireWildcard(require("./pv.js"));
var _queue = require("./queue.js");
var _histogram = require("./histogram.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ColorMap, compare;
compare = function (a, b) {
  return pv.naturalOrder(a.vbox.count() * a.vbox.volume(), b.vbox.count() * b.vbox.volume());
};
exports.ColorMap = ColorMap = class ColorMap {
  constructor() {
    this.vboxes = _queue.Queue.create({
      compare
    });
  }
  static create() {
    return new ColorMap();
  }
  push(vbox) {
    var color;
    color = vbox.avg();
    return this.vboxes.push({
      vbox,
      color
    });
  }
  palette() {
    return this.vboxes.map(function (vbox) {
      return vbox.color;
    });
  }
  size() {
    return this.vboxes.size();
  }
  map(color) {
    var i, j, ref, value;
    for (i = j = 0, ref = this.vboxes.size; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      value = this.vboxes.peek(i);
      if (value.vbox.contains(color)) {
        return value.color;
      }
    }
    return this.nearest(color);
  }
  nearest(color) {
    var current, distance, i, j, nearest, ref, result;
    result = null;
    nearest = 1e12;
    for (i = j = 0, ref = this.vboxes.size; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      current = this.vboxes.peek(i).color;
      distance = Math.sqrt(Math.pow(color[0] - current[0], 2) + Math.pow(color[1] - current[1], 2) + Math.pow(color[2] - current[2], 2));
      if (distance < nearest) {
        nearest = distance;
        result = current;
      }
    }
    return result;
  }
};
//# sourceMappingURL=data:application/json;base64,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Q0FBQyxLQUFBO01BQzFCLFFBQUEsR0FBVyxJQUFJLENBQUMsSUFBTCxDQUNSLElBQUksQ0FBQyxHQUFMLENBQVMsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLE9BQU8sQ0FBQyxDQUFELENBQTNCLEVBQWdDLENBQWhDLENBQUQsR0FDQyxJQUFJLENBQUMsR0FBTCxDQUFTLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBVyxPQUFPLENBQUMsQ0FBRCxDQUEzQixFQUFnQyxDQUFqQyxDQURBLEdBRUMsSUFBSSxDQUFDLEdBQUwsQ0FBUyxLQUFLLENBQUMsQ0FBRCxDQUFMLEdBQVcsT0FBTyxDQUFDLENBQUQsQ0FBM0IsRUFBZ0MsQ0FBakMsQ0FIUyxDQUFBO01BTVgsSUFBRyxRQUFBLEdBQVcsT0FBZCxFQUFBO1FBQ0UsT0FBQSxHQUFVLFFBQUE7UUFDVixNQUFBLEdBQVMsT0FGWDs7SUFSRjtXQVlBLE1BQUE7RUFmTztBQXpCWCxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcbmltcG9ydCAqIGFzIEMgZnJvbSBcIi4vY29uc3RhbnRzXCJcbmltcG9ydCAqIGFzIHB2IGZyb20gXCIuL3B2XCJcbmltcG9ydCB7IFF1ZXVlIH0gZnJvbSBcIi4vcXVldWVcIlxuaW1wb3J0IHsgZ2V0Q29sb3JJbmRleCB9IGZyb20gXCIuL2hpc3RvZ3JhbVwiXG5cblxuY29tcGFyZSA9ICggYSwgYiApIC0+XG4gIHB2Lm5hdHVyYWxPcmRlciAoIGEudmJveC5jb3VudCgpICogYS52Ym94LnZvbHVtZSgpICksXG4gICAgKCBiLnZib3guY291bnQoKSAqIGIudmJveC52b2x1bWUoKSApXG5cblxuY2xhc3MgQ29sb3JNYXBcbiAgY29uc3RydWN0b3I6ICgpIC0+XG4gICAgQHZib3hlcyA9IFF1ZXVlLmNyZWF0ZSB7IGNvbXBhcmUgfVxuXG4gIEBjcmVhdGU6ICgpIC0+XG4gICAgbmV3IENvbG9yTWFwKClcbiBcbiAgcHVzaDogKCB2Ym94ICkgLT5cbiAgICBjb2xvciA9IHZib3guYXZnKClcbiAgICBAdmJveGVzLnB1c2ggeyB2Ym94LCBjb2xvciB9XG4gICAgIFxuICBwYWxldHRlOiAtPiBcbiAgICBAdmJveGVzLm1hcCAoIHZib3ggKSAtPiB2Ym94LmNvbG9yXG5cbiAgc2l6ZTogLT5cbiAgICBAdmJveGVzLnNpemUoKVxuXG4gIG1hcDogKCBjb2xvciApIC0+XG4gICAgZm9yIGkgaW4gWyAwIC4uLiBAdmJveGVzLnNpemUgXVxuICAgICAgdmFsdWUgPSBAdmJveGVzLnBlZWsgaVxuICAgICAgaWYgdmFsdWUudmJveC5jb250YWlucyBjb2xvclxuICAgICAgICByZXR1cm4gdmFsdWUuY29sb3JcblxuICAgIEBuZWFyZXN0IGNvbG9yXG4gIFxuICBuZWFyZXN0OiAoIGNvbG9yICkgLT5cbiAgICByZXN1bHQgPSBudWxsXG4gICAgbmVhcmVzdCA9IDFlMTJcbiAgICBmb3IgaSBpbiBbIDAgLi4uIEB2Ym94ZXMuc2l6ZSBdXG4gICAgICBjdXJyZW50ID0gQHZib3hlcy5wZWVrKGkpLmNvbG9yXG4gICAgICBkaXN0YW5jZSA9IE1hdGguc3FydChcbiAgICAgICAgKE1hdGgucG93IGNvbG9yWzBdIC0gY3VycmVudFswXSwgMikgK1xuICAgICAgICAoTWF0aC5wb3cgY29sb3JbMV0gLSBjdXJyZW50WzFdLCAyKSArXG4gICAgICAgIChNYXRoLnBvdyBjb2xvclsyXSAtIGN1cnJlbnRbMl0sIDIpXG4gICAgICApXG5cbiAgICAgIGlmIGRpc3RhbmNlIDwgbmVhcmVzdFxuICAgICAgICBuZWFyZXN0ID0gZGlzdGFuY2VcbiAgICAgICAgcmVzdWx0ID0gY3VycmVudFxuXG4gICAgcmVzdWx0XG5cblxuZXhwb3J0IHsgQ29sb3JNYXAgfSJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=src/color-map.coffee